#include <algorithm>
#include <string>
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

using namespace std;

class Solution {
public:

    // f[pos][k][c] =   f[pos-1][k][c] + 1                           s[pos] == c
    //                  f[pos-1][k-1][c] + 1                                             s[pos] != c
    // f[pos][k][c] = k                 k >= pos + 1

    int characterReplacement(string s, int k) {
       int f[10005][26];
       memset(f, 0, sizeof f);
       int ans = 0;

       for (int i=0; i<s.size(); ++i)
        // for (int j=0; j<=k; ++j)
        for (int j=k; j>=0; --j)
          for (int c=0; c<26; ++c)
          {
            if (j == 0)
            {
                if (s[i] == 'A' + c)
                    f[j][c] = f[j][c] + 1;
                else
                    f[j][c] = 0;
                // f[j][c] = f[j][c] + (s[i] == 'A' + c)? ;
            }
            else if (j >= i+1) f[j][c] = i+1;
            else
            {
                if (s[i] == 'A' + c)
                    f[j][c] = f[j][c] + 1;
                else 
                    f[j][c] = f[j-1][c] + 1;
            }

            ans = max(ans, f[j][c]);
            cout << i << ' ' << j << ' ' << char('A' + c) << ' ' << f[j][c] << ' ' << ans << endl;
          }
      return ans;
    }
};

int main()
{
    string s;
    int n;
    Solution sol;
    while (cin >> s >> n)
    {
        cout << sol.characterReplacement(s, n) << endl;
    }
    return 0;
}
